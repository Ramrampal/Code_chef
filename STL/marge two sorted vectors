/*
Merge Two Sorted Vectors
Task
Given two vectors of integers, merge and print them if both are sorted, else print the largest one in reverse order.
Input Format
The first line of input will contain two space separated integerx 
N
N and 
M
M, denoting the number of integers in first and second vector.
Next line contains 
N
N space separated integers.
Next(third) line contains 
M
M space separated integers.
Output Format
Output on a single line:
Elements of merged vector (space separated) if both the given vectors are sorted.
Else vector elements (again space separated) of larger vector in reverse order.
Constraints
1
≤
N
,
M
≤
100000
1≤N,M≤100000
All integers are positive and don't exceed 
100000
100000.
Sample 1:
Input
Output
5 4
4 7 6 9 10 
4 5 7 8 
10 9 6 7 4
Explanation:
Since first vector is not sorted, we print the elements of larger vector in reverse order.

Sample 2:
Input
Output
3 2
1 2 3
3 4
1 2 3 3 4
Explanation:
Since both the vectors are sorted, we merged them and print the elements of merged vector.

*/


#include <bits/stdc++.h>

using namespace std;

int main() {
  int n, m;
  cin >> n >> m;
  vector<int> a(n), b(m);

  for(int i = 0; i < n; i++)
    cin >> a[i];
  
  for(int i = 0; i < m; i++)
    cin >> b[i];

  if(is_sorted(a.begin(), a.end()) && is_sorted(b.begin(), b.end())) {
    vector<int> v(n + m);
    merge(a.begin(), a.end(), b.begin(), b.end(), v.begin());
    for(int i = 0; i < n + m; i++)
        cout << v[i] << " ";
  } else{
    if(n > m){
        reverse(a.begin(), a.end());
        for(int i = 0; i < n; i++)
            cout << a[i] << " ";
    } else{
        reverse(b.begin(), b.end());
        for(int i = 0; i < m; i++)
            cout << b[i] << " ";
    }
  }
  
  return 0;
} 
 //input 
/*
5 4
4 7 6 9 10 
4 5 7 8 


*/

